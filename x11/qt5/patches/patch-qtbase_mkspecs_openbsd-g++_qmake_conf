$OpenBSD: patch-qtbase_mkspecs_openbsd-g++_qmake_conf,v 1.3 2015/05/04 10:37:01 zhuk Exp $
1. Un-hardcode system paths.
2. Make sure some paths are listed before others, needed to 
   make sure egcc won't pick up /usr/include before its own 
   directories.
3. Respect OpenBSD shared library naming rules.
4. Use common GCC options to avoid duplication.
5. Fix --no-undefined usage and sync other things with current OpenBSD style.
6. Allow C++11 to work.
--- qtbase/mkspecs/openbsd-g++/qmake.conf.ports.orig	Tue Feb 17 07:56:54 2015
+++ qtbase/mkspecs/openbsd-g++/qmake.conf	Sun May  3 17:32:50 2015
@@ -7,40 +7,36 @@ QMAKE_PLATFORM          = openbsd bsd
 
 QMAKE_COMPILER          = gcc
 
+include(../common/gcc-base-unix.conf)
+include(../common/unix.conf)
+
 QMAKE_CC                = gcc
-QMAKE_LEX               = flex
-QMAKE_LEXFLAGS          =
-QMAKE_YACC              = yacc
-QMAKE_YACCFLAGS         = -d
 QMAKE_CFLAGS            = -pipe
-QMAKE_CFLAGS_DEPS       = -M
-QMAKE_CFLAGS_WARN_ON    = -Wall -W
-QMAKE_CFLAGS_WARN_OFF   = -w
-QMAKE_CFLAGS_RELEASE    = -O2
-QMAKE_CFLAGS_DEBUG      = -g
+QMAKE_CFLAGS_DEBUG      = -O0 -g
 QMAKE_CFLAGS_SHLIB      = -fPIC
-QMAKE_CFLAGS_STATIC_LIB = $$QMAKE_CFLAGS_SHLIB
+QMAKE_CFLAGS_STATIC_LIB = -fPIC
 QMAKE_CFLAGS_YACC       = -Wno-unused -Wno-parentheses
 QMAKE_CFLAGS_THREAD     = -pthread
+QMAKE_CFLAGS_OPTIMIZE_FULL = $$QMAKE_CFLAGS_RELEASE
 
 QMAKE_CXX               = g++
 QMAKE_CXXFLAGS          = $$QMAKE_CFLAGS
+QMAKE_CXXFLAGS_CXX11	= -std=c++11
 QMAKE_CXXFLAGS_DEPS     = $$QMAKE_CFLAGS_DEPS
-QMAKE_CXXFLAGS_WARN_ON  = $$QMAKE_CFLAGS_WARN_ON
-QMAKE_CXXFLAGS_WARN_OFF = $$QMAKE_CFLAGS_WARN_OFF
-QMAKE_CXXFLAGS_RELEASE  = $$QMAKE_CFLAGS_RELEASE
 QMAKE_CXXFLAGS_DEBUG    = $$QMAKE_CFLAGS_DEBUG
 QMAKE_CXXFLAGS_SHLIB    = $$QMAKE_CFLAGS_SHLIB
 QMAKE_CXXFLAGS_STATIC_LIB = $$QMAKE_CFLAGS_STATIC_LIB
 QMAKE_CXXFLAGS_YACC     = $$QMAKE_CFLAGS_YACC
 QMAKE_CXXFLAGS_THREAD   = $$QMAKE_CFLAGS_THREAD
+QMAKE_CXXFLAGS_OPTIMIZE_FULL = $$QMAKE_CXXFLAGS_RELEASE
 
-QMAKE_INCDIR            = /usr/local/include
-QMAKE_LIBDIR            = /usr/local/lib
-QMAKE_INCDIR_X11        = /usr/X11R6/include
-QMAKE_LIBDIR_X11        = /usr/X11R6/lib
-QMAKE_INCDIR_OPENGL     = /usr/X11R6/include
-QMAKE_LIBDIR_OPENGL     = /usr/X11R6/lib
+QMAKE_INCDIR            = $(LOCALBASE)/include
+QMAKE_LIBDIR            = $(LOCALBASE)/lib
+QMAKE_INCDIR_X11        = $(X11BASE)/include
+QMAKE_LIBDIR_X11        = $(X11BASE)/lib
+QMAKE_INCDIR_OPENGL     = $(X11BASE)/include
+QMAKE_LIBDIR_OPENGL     = $(X11BASE)/lib
+QMAKE_INCDIR_PREPEND    = ${OPENBSD_INCDIR_PREPEND}
 
 QMAKE_LINK              = g++
 QMAKE_LINK_SHLIB        = g++
@@ -52,22 +48,18 @@ QMAKE_LINK_SHLIB_CMD    = $$QMAKE_LINK_SHLIB $(LFLAGS)
 QMAKE_LFLAGS            =
 QMAKE_LFLAGS_RELEASE    =
 QMAKE_LFLAGS_DEBUG      =
-QMAKE_LFLAGS_SHLIB      = -shared
-QMAKE_LFLAGS_PLUGIN     = $$QMAKE_LFLAGS_SHLIB
-QMAKE_LFLAGS_SONAME     = -Wl,-soname,
-QMAKE_LFLAGS_THREAD     = -pthread
-QMAKE_LFLAGS_NOUNDEF    = -Wl,-no_unresolved
 
+QMAKE_OPENBSD_SHLIB	= 1
+
 QMAKE_LIBS              =
 QMAKE_LIBS_DYNLOAD      =
 QMAKE_LIBS_X11          = -lXext -lX11 -lm
 QMAKE_LIBS_OPENGL       = -lGL
-QMAKE_LIBS_THREAD       =
+QMAKE_LIBS_THREAD       = -lpthread
 
 QMAKE_AR                = ar q
 QMAKE_OBJCOPY           = objcopy
 QMAKE_NM                = nm -P
 QMAKE_RANLIB            = ranlib
 
-include(../common/unix.conf)
 load(qt_config)
