$OpenBSD: patch-pstree_c,v 1.4 2015/05/11 11:47:27 sthen Exp $

If ioctl fails, the structs are uninitialized, so don't use them.

--- pstree.c.orig	Fri Apr 12 10:47:03 2013
+++ pstree.c	Mon May 11 12:44:12 2015
@@ -71,7 +71,7 @@ extern getargs(struct ProcInfo *, int, char *, int);
  * (Net|Open|Free)BSD & Darwin merged by Ralf Meyer <ralf AT thp.Uni-Duisburg.DE>
  */
 #  define HAS_PGID
-#  define PSCMD 	"ps -axwwo user,pid,ppid,pgid,command"
+#  define PSCMD 	"ps -kaxwwo user,pid,ppid,pgid,command"
 #  define PSFORMAT 	"%s %ld %ld %ld %[^\n]"
 #  define PSVARS	P[i].name, &P[i].pid, &P[i].ppid, &P[i].pgid, P[i].cmd
 #  define PSVARSN	5
@@ -872,12 +872,12 @@ int main(int argc, char **argv) {
     Columns = atoi((char*)termdef(fileno(stdout),'c'));
 #elif defined(TIOCGWINSZ)
     struct winsize winsize;
-    ioctl(fileno(stdout), TIOCGWINSZ, &winsize);
-    Columns = winsize.ws_col;
+    if (ioctl(fileno(stdout), TIOCGWINSZ, &winsize) != -1)
+        Columns = winsize.ws_col;
 #elif defined(TIOCGSIZE)
     struct ttysize ttysize;
-    ioctl(fileno(stdout), TIOCGSIZE, &ttysize);
-    Columns = ttysize.ts_cols;
+    if (ioctl(fileno(stdout), TIOCGSIZE, &ttysize) != -1)
+        Columns = ttysize.ts_cols;
 #else
     char *env = getenv("COLUMNS");
     Columns = env ? atoi(env) : 80;
