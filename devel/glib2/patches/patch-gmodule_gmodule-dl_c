$OpenBSD: patch-gmodule_gmodule-dl_c,v 1.4 2015/03/27 16:00:00 ajacoutot Exp $

XXX big bad hammer!

--- gmodule/gmodule-dl.c.orig	Sat Jun 28 19:02:43 2014
+++ gmodule/gmodule-dl.c	Fri Mar 20 13:20:33 2015
@@ -126,16 +126,18 @@ static void
 _g_module_close (gpointer handle,
 		 gboolean is_unref)
 {
-  /* are there any systems out there that have dlopen()/dlclose()
-   * without a reference count implementation?
+  /* Intentionally not dlclose()ing because it is safer to leave the library
+   * loaded in memory than to close it and possibly leave dangling pointers
+   * to things like atexit handlers, atfork handlers, blocks, etc.
+   *
+   * See https://trac.macports.org/ticket/45309 for an example from when
+   * a library used by a module added a new dependency which had an
+   * initializer which added a child atfork handler.  The result is that
+   * after closing the module, the system had a dangling pointer for the
+   * atfork handler which would at best crash on the child side of fork()
+   * and at worst lead to arbitray code execution of whatever happened to be
+   * at that location in memory at a later time in the process.
    */
-  is_unref |= 1;
-  
-  if (is_unref)
-    {
-      if (dlclose (handle) != 0)
-	g_module_set_error (fetch_dlerror (TRUE));
-    }
 }
 
 static gpointer
